defmodule MyHive.Notifications.NotificationPdfRenderer do
  alias MyHive.Repo
  alias MyHiveWeb.Notifications.NotificationView
  def call(notification, override_rcpt \\ nil) do
    notification
    |> Repo.preload([:recipient, :sender])
    |> html(override_rcpt)
    |> PdfGenerator.generate(page_size: "A4", shell_params: shell_params())
    |> elem(1)
  end

  def html(notification, override_rcpt \\ nil) do
    Phoenix.View.render_to_string(NotificationView, "card.html", %{
      conn: %Plug.Conn{private: %{phoenix_endpoint: MyHiveWeb.Endpoint}},
      notification: notification,
      recipient: override_rcpt,
      layout: { MyHiveWeb.LayoutView, "pdfexport.html" }
    })
  end

  def timestamp() do
    String.replace(current_time(), "/","_")
    |> String.replace(":","_")
    |> String.replace(" ","_")
  end

  defp shell_params() do
    ["-O", "Portrait",
     "--margin-top", "15",
     "--margin-bottom", "30",
     "--footer-spacing", "6",
     "--margin-left", "20",
     "--margin-right", "20",
     "--footer-font-size", "8",
     "--footer-center", "[page] of [topage]",
     "--footer-right","Generated by my-hive #{current_time()}"]
  end

  defp current_time do
    {_, time} = Timex.now("Europe/London")
      |> Timex.format("%m/%d/%Y %H:%m:%S", :strftime)
    time
  end

end
